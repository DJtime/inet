%description:

TODO

%file: test.ned

import inet.queueing.classifier.TokenBucketClassifier;
import inet.queueing.sink.PassivePacketSink;
import inet.queueing.source.ActivePacketSource;

network TestTokenBucket
{
    submodules:
        producer: ActivePacketSource {
            @display("p=100,100");
        }
        classifier: TokenBucketClassifier {
            @display("p=200,100");
        }
        greenConsumer: PassivePacketSink {
            @display("p=300,100");
        }
        redConsumer: PassivePacketSink {
            @display("p=300,200");
        }
        consumer: PassivePacketSink {
            @display("p=300,100");
        }
    connections allowunconnected:
        producer.out --> classifier.in;
        classifier.out++ --> greenConsumer.in;
        classifier.out++ --> redConsumer.in;
}

%inifile: omnetpp.ini

[General]
network = TestTokenBucket
sim-time-limit = 10s
cmdenv-event-banners = false
cmdenv-log-prefix = "At %ts %N: "
*.producer.packetLength = 1B
*.producer.productionInterval = exponential(1s)
*.classifier.tokenProductionRate = 4
*.classifier.label = "green"

%# remove formatting
%subst: /\x1B\[[0-9;]*m//

%subst: /\nRunning simulation\.\.\.\n//

%contains-regex: stdout
At [^\n]*?s producer: Producing packet, .*?producer-0.*?
At [^\n]*?s classifier: Classifying packet, .*?producer-0.*?
At [^\n]*?s classifier: Checking tokens for packet, .*?8.*?0.*?producer-0.*?
At [^\n]*?s classifier: Insufficient number of tokens for packet, .*?8.*?0.*?producer-0.*?
At [^\n]*?s redConsumer: Consuming packet, .*?producer-0.*?
At [^\n]*?s producer: Producing packet, .*?producer-1.*?
At [^\n]*?s classifier: Classifying packet, .*?producer-1.*?
At [^\n]*?s classifier: Checking tokens for packet, .*?8.*?3.1835.*?producer-1.*?
At [^\n]*?s classifier: Insufficient number of tokens for packet, .*?8.*?3.1835.*?producer-1.*?
At [^\n]*?s redConsumer: Consuming packet, .*?producer-1.*?
At [^\n]*?s producer: Producing packet, .*?producer-2.*?
At [^\n]*?s classifier: Classifying packet, .*?producer-2.*?
At [^\n]*?s classifier: Checking tokens for packet, .*?8.*?6.77774.*?producer-2.*?
At [^\n]*?s classifier: Insufficient number of tokens for packet, .*?8.*?6.77774.*?producer-2.*?
At [^\n]*?s redConsumer: Consuming packet, .*?producer-2.*?
At [^\n]*?s producer: Producing packet, .*?producer-3.*?
At [^\n]*?s classifier: Classifying packet, .*?producer-3.*?
At [^\n]*?s classifier: Checking tokens for packet, .*?8.*?11.8015.*?producer-3.*?
At [^\n]*?s classifier: Removed tokens for packet, .*?8.*?3.80146.*?producer-3.*?
At [^\n]*?s greenConsumer: Consuming packet, .*?producer-3.*?
At [^\n]*?s producer: Producing packet, .*?producer-4.*?
At [^\n]*?s classifier: Classifying packet, .*?producer-4.*?
At [^\n]*?s classifier: Checking tokens for packet, .*?8.*?11.2399.*?producer-4.*?
At [^\n]*?s classifier: Removed tokens for packet, .*?8.*?3.23988.*?producer-4.*?
At [^\n]*?s greenConsumer: Consuming packet, .*?producer-4.*?
At [^\n]*?s producer: Producing packet, .*?producer-5.*?
At [^\n]*?s classifier: Classifying packet, .*?producer-5.*?
At [^\n]*?s classifier: Checking tokens for packet, .*?8.*?6.93277.*?producer-5.*?
At [^\n]*?s classifier: Insufficient number of tokens for packet, .*?8.*?6.93277.*?producer-5.*?
At [^\n]*?s redConsumer: Consuming packet, .*?producer-5.*?
At [^\n]*?s producer: Producing packet, .*?producer-6.*?
At [^\n]*?s classifier: Classifying packet, .*?producer-6.*?
At [^\n]*?s classifier: Checking tokens for packet, .*?8.*?14.739.*?producer-6.*?
At [^\n]*?s classifier: Removed tokens for packet, .*?8.*?6.73895.*?producer-6.*?
At [^\n]*?s greenConsumer: Consuming packet, .*?producer-6.*?
At [^\n]*?s producer: Producing packet, .*?producer-7.*?
At [^\n]*?s classifier: Classifying packet, .*?producer-7.*?
At [^\n]*?s classifier: Checking tokens for packet, .*?8.*?9.88776.*?producer-7.*?
At [^\n]*?s classifier: Removed tokens for packet, .*?8.*?1.88776.*?producer-7.*?
At [^\n]*?s greenConsumer: Consuming packet, .*?producer-7.*?
