%description:

In this test, packets are produced periodically (randomly) by an active packet
source (ActivePacketSource). The packets are collected periodically (randomly) by
an active packet sink (ActivePacketSink). The source and the sink is connected
by a priority queue with two inner queues (PriorityQueue) where packets are
stored temporarily.

%file: test.ned

import inet.queueing.source.ActivePacketSource;
import inet.queueing.sink.ActivePacketSink;
import inet.queueing.queue.PriorityQueue;

network TestPacketQueue
{
    submodules:
        producer: ActivePacketSource {
            @display("p=100,100");
        }
        queue: PriorityQueue {
            @display("p=200,100");
        }
        collector: ActivePacketSink {
            @display("p=300,100");
        }
    connections allowunconnected:
        producer.out --> queue.in;
        queue.out --> collector.in;
}

%file: Test.cc
#include <vector>
#include "inet/queueing/function/PacketClassifierFunction.h"
#include "inet/common/packet/Packet.h"

using namespace inet;

static int testClassify(Packet *packet)
{
    return packet->getId() % 2;
}

Register_Packet_Classifier_Function(TestClassifier, testClassify);

%inifile: omnetpp.ini

[General]
network = TestPacketQueue
sim-time-limit = 10s
cmdenv-event-banners = false
cmdenv-log-prefix = "At %ts %N: "
*.producer.packetLength = 1B
*.producer.productionInterval = uniform(0s, 2s)
*.queue.numQueues = 2
*.queue.classifier.classifierClass = "TestClassifier"
*.collector.collectionInterval = uniform(0s, 2s)

%# remove formatting
%subst: /\x1B\[[0-9;]*m//

%subst: /\nRunning simulation\.\.\.\n//

%contains-regex: stdout

At [^\n]*?: Producing packet, [^\n]*?producer-0[^\n]*?
At [^\n]*?: Pushing packet, [^\n]*?producer-0[^\n]*?
At [^\n]*?: Classifying packet, [^\n]*?producer-0[^\n]*?
At [^\n]*?: Pushing packet, [^\n]*?producer-0[^\n]*?
At [^\n]*?: Pulling packet, [^\n]*?producer-0[^\n]*?
At [^\n]*?: Scheduling packet, [^\n]*?producer-0[^\n]*?
At [^\n]*?: Collecting packet, [^\n]*?producer-0[^\n]*?
At [^\n]*?: Producing packet, [^\n]*?producer-1[^\n]*?
At [^\n]*?: Pushing packet, [^\n]*?producer-1[^\n]*?
At [^\n]*?: Classifying packet, [^\n]*?producer-1[^\n]*?
At [^\n]*?: Pushing packet, [^\n]*?producer-1[^\n]*?
At [^\n]*?: Pulling packet, [^\n]*?producer-1[^\n]*?
At [^\n]*?: Scheduling packet, [^\n]*?producer-1[^\n]*?
At [^\n]*?: Collecting packet, [^\n]*?producer-1[^\n]*?
At [^\n]*?: Producing packet, [^\n]*?producer-2[^\n]*?
At [^\n]*?: Pushing packet, [^\n]*?producer-2[^\n]*?
At [^\n]*?: Classifying packet, [^\n]*?producer-2[^\n]*?
At [^\n]*?: Pushing packet, [^\n]*?producer-2[^\n]*?
At [^\n]*?: Pulling packet, [^\n]*?producer-2[^\n]*?
At [^\n]*?: Scheduling packet, [^\n]*?producer-2[^\n]*?
At [^\n]*?: Collecting packet, [^\n]*?producer-2[^\n]*?
At [^\n]*?: Producing packet, [^\n]*?producer-3[^\n]*?
At [^\n]*?: Pushing packet, [^\n]*?producer-3[^\n]*?
At [^\n]*?: Classifying packet, [^\n]*?producer-3[^\n]*?
At [^\n]*?: Pushing packet, [^\n]*?producer-3[^\n]*?
At [^\n]*?: Pulling packet, [^\n]*?producer-3[^\n]*?
At [^\n]*?: Scheduling packet, [^\n]*?producer-3[^\n]*?
At [^\n]*?: Collecting packet, [^\n]*?producer-3[^\n]*?
At [^\n]*?: Producing packet, [^\n]*?producer-4[^\n]*?
At [^\n]*?: Pushing packet, [^\n]*?producer-4[^\n]*?
At [^\n]*?: Classifying packet, [^\n]*?producer-4[^\n]*?
At [^\n]*?: Pushing packet, [^\n]*?producer-4[^\n]*?
At [^\n]*?: Producing packet, [^\n]*?producer-5[^\n]*?
At [^\n]*?: Pushing packet, [^\n]*?producer-5[^\n]*?
At [^\n]*?: Classifying packet, [^\n]*?producer-5[^\n]*?
At [^\n]*?: Pushing packet, [^\n]*?producer-5[^\n]*?
At [^\n]*?: Pulling packet, [^\n]*?producer-4[^\n]*?
At [^\n]*?: Scheduling packet, [^\n]*?producer-4[^\n]*?
At [^\n]*?: Collecting packet, [^\n]*?producer-4[^\n]*?
At [^\n]*?: Producing packet, [^\n]*?producer-6[^\n]*?
At [^\n]*?: Pushing packet, [^\n]*?producer-6[^\n]*?
At [^\n]*?: Classifying packet, [^\n]*?producer-6[^\n]*?
At [^\n]*?: Pushing packet, [^\n]*?producer-6[^\n]*?
At [^\n]*?: Pulling packet, [^\n]*?producer-6[^\n]*?
At [^\n]*?: Scheduling packet, [^\n]*?producer-6[^\n]*?
At [^\n]*?: Collecting packet, [^\n]*?producer-6[^\n]*?
At [^\n]*?: Producing packet, [^\n]*?producer-7[^\n]*?
At [^\n]*?: Pushing packet, [^\n]*?producer-7[^\n]*?
At [^\n]*?: Classifying packet, [^\n]*?producer-7[^\n]*?
At [^\n]*?: Pushing packet, [^\n]*?producer-7[^\n]*?
At [^\n]*?: Producing packet, [^\n]*?producer-8[^\n]*?
At [^\n]*?: Pushing packet, [^\n]*?producer-8[^\n]*?
At [^\n]*?: Classifying packet, [^\n]*?producer-8[^\n]*?
At [^\n]*?: Pushing packet, [^\n]*?producer-8[^\n]*?
At [^\n]*?: Pulling packet, [^\n]*?producer-8[^\n]*?
At [^\n]*?: Scheduling packet, [^\n]*?producer-8[^\n]*?
At [^\n]*?: Collecting packet, [^\n]*?producer-8[^\n]*?
At [^\n]*?: Pulling packet, [^\n]*?producer-5[^\n]*?
At [^\n]*?: Scheduling packet, [^\n]*?producer-5[^\n]*?
At [^\n]*?: Collecting packet, [^\n]*?producer-5[^\n]*?

<!> Simulation time limit reached -- at t=10s
