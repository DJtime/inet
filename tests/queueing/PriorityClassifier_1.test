%description:

In this test, packets are produced periodically by an active packet source
(ActivePacketSource). The packets are consumed by two active packet sinks
(ActivePacketSinks). The sinks are connected to FIFO queues (PacketQueue) with
limited capacity where packets are stored temporarily. The single source is
connected to the two queues using a classifier (PriorityClassifier). The
classifier forwards packets from the producer to the queues in a prioritized
way.

%file: test.ned

import inet.queueing.sink.ActivePacketSink;
import inet.queueing.queue.PacketQueue;
import inet.queueing.classifier.PriorityClassifier;
import inet.queueing.source.ActivePacketSource;

network TestPriorityClassifier
{
    submodules:
        producer: ActivePacketSource {
            @display("p=100,100");
        }
        classifier: PriorityClassifier {
            @display("p=200,100");
        }
        queue1: PacketQueue {
            @display("p=300,100");
        }
        queue2: PacketQueue {
            @display("p=300,200");
        }
        collector1: ActivePacketSink {
            @display("p=400,100");
        }
        collector2: ActivePacketSink {
            @display("p=400,200");
        }
    connections allowunconnected:
        producer.out --> classifier.in;
        classifier.out++ --> queue1.in;
        classifier.out++ --> queue2.in;
        queue1.out --> collector1.in;
        queue2.out --> collector2.in;
}

%inifile: omnetpp.ini

[General]
network = TestPriorityClassifier
sim-time-limit = 10s
cmdenv-event-banners = false
cmdenv-log-prefix = "At %ts %N: "
*.queue*.packetCapacity = 1
*.producer.packetLength = 1B
*.producer.productionInterval = uniform(0s, 1s)
*.collector*.collectionInterval = uniform(0s, 2s)

%# remove formatting
%subst: /\x1B\[[0-9;]*m//

%subst: /\nRunning simulation\.\.\.\n//

%contains-regex: stdout
At [^\n]*?: Producing packet, [^\n]*?producer-1[^\n]*?
At [^\n]*?: Classifying packet, [^\n]*?producer-1[^\n]*?
At [^\n]*?: Pushing packet, [^\n]*?producer-1[^\n]*?
At [^\n]*?: Pulling packet, [^\n]*?producer-1[^\n]*?
At [^\n]*?: Collecting packet, [^\n]*?producer-1[^\n]*?
At [^\n]*?: Producing packet, [^\n]*?producer-2[^\n]*?
At [^\n]*?: Classifying packet, [^\n]*?producer-2[^\n]*?
At [^\n]*?: Pushing packet, [^\n]*?producer-2[^\n]*?
At [^\n]*?: Producing packet, [^\n]*?producer-3[^\n]*?
At [^\n]*?: Classifying packet, [^\n]*?producer-3[^\n]*?
At [^\n]*?: Pushing packet, [^\n]*?producer-3[^\n]*?
At [^\n]*?: Pulling packet, [^\n]*?producer-3[^\n]*?
At [^\n]*?: Collecting packet, [^\n]*?producer-3[^\n]*?
At [^\n]*?: Producing packet, [^\n]*?producer-4[^\n]*?
At [^\n]*?: Classifying packet, [^\n]*?producer-4[^\n]*?
At [^\n]*?: Pushing packet, [^\n]*?producer-4[^\n]*?
At [^\n]*?: Pulling packet, [^\n]*?producer-2[^\n]*?
At [^\n]*?: Collecting packet, [^\n]*?producer-2[^\n]*?
At [^\n]*?: Pulling packet, [^\n]*?producer-4[^\n]*?
At [^\n]*?: Collecting packet, [^\n]*?producer-4[^\n]*?
At [^\n]*?: Producing packet, [^\n]*?producer-5[^\n]*?
At [^\n]*?: Classifying packet, [^\n]*?producer-5[^\n]*?
At [^\n]*?: Pushing packet, [^\n]*?producer-5[^\n]*?
At [^\n]*?: Pulling packet, [^\n]*?producer-5[^\n]*?
At [^\n]*?: Collecting packet, [^\n]*?producer-5[^\n]*?
At [^\n]*?: Producing packet, [^\n]*?producer-6[^\n]*?
At [^\n]*?: Classifying packet, [^\n]*?producer-6[^\n]*?
At [^\n]*?: Pushing packet, [^\n]*?producer-6[^\n]*?
At [^\n]*?: Pulling packet, [^\n]*?producer-6[^\n]*?
At [^\n]*?: Collecting packet, [^\n]*?producer-6[^\n]*?
At [^\n]*?: Producing packet, [^\n]*?producer-7[^\n]*?
At [^\n]*?: Classifying packet, [^\n]*?producer-7[^\n]*?
At [^\n]*?: Pushing packet, [^\n]*?producer-7[^\n]*?
At [^\n]*?: Pulling packet, [^\n]*?producer-7[^\n]*?
At [^\n]*?: Collecting packet, [^\n]*?producer-7[^\n]*?
At [^\n]*?: Producing packet, [^\n]*?producer-8[^\n]*?
At [^\n]*?: Classifying packet, [^\n]*?producer-8[^\n]*?
At [^\n]*?: Pushing packet, [^\n]*?producer-8[^\n]*?
At [^\n]*?: Pulling packet, [^\n]*?producer-8[^\n]*?
At [^\n]*?: Collecting packet, [^\n]*?producer-8[^\n]*?
At [^\n]*?: Producing packet, [^\n]*?producer-9[^\n]*?
At [^\n]*?: Classifying packet, [^\n]*?producer-9[^\n]*?
At [^\n]*?: Pushing packet, [^\n]*?producer-9[^\n]*?
At [^\n]*?: Pulling packet, [^\n]*?producer-9[^\n]*?
At [^\n]*?: Collecting packet, [^\n]*?producer-9[^\n]*?
At [^\n]*?: Producing packet, [^\n]*?producer-10[^\n]*?
At [^\n]*?: Classifying packet, [^\n]*?producer-10[^\n]*?
At [^\n]*?: Pushing packet, [^\n]*?producer-10[^\n]*?
At [^\n]*?: Pulling packet, [^\n]*?producer-10[^\n]*?
At [^\n]*?: Collecting packet, [^\n]*?producer-10[^\n]*?
At [^\n]*?: Producing packet, [^\n]*?producer-11[^\n]*?
At [^\n]*?: Classifying packet, [^\n]*?producer-11[^\n]*?
At [^\n]*?: Pushing packet, [^\n]*?producer-11[^\n]*?
At [^\n]*?: Producing packet, [^\n]*?producer-12[^\n]*?
At [^\n]*?: Classifying packet, [^\n]*?producer-12[^\n]*?
At [^\n]*?: Pushing packet, [^\n]*?producer-12[^\n]*?
At [^\n]*?: Pulling packet, [^\n]*?producer-12[^\n]*?
At [^\n]*?: Collecting packet, [^\n]*?producer-12[^\n]*?
At [^\n]*?: Producing packet, [^\n]*?producer-13[^\n]*?
At [^\n]*?: Classifying packet, [^\n]*?producer-13[^\n]*?
At [^\n]*?: Pushing packet, [^\n]*?producer-13[^\n]*?
At [^\n]*?: Pulling packet, [^\n]*?producer-11[^\n]*?
At [^\n]*?: Collecting packet, [^\n]*?producer-11[^\n]*?
At [^\n]*?: Pulling packet, [^\n]*?producer-13[^\n]*?
At [^\n]*?: Collecting packet, [^\n]*?producer-13[^\n]*?
