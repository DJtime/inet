%description:

In this test, packets are periodically (randomly) collected by two active sinks
(ActivePacketSinks). One sink collects packets with a slower rate while the other
sink uses a faster rate. The two packet sinks are combined using a markov
chain with random transition matrix and random wait intervals. The packets are
provided by a single passive source (PassivePacketSource).

%file: test.ned

import inet.queueing.sink.ActivePacketSink;
import inet.queueing.classifier.MarkovClassifier;
import inet.queueing.source.PassivePacketSource;

network TestBurst
{
    submodules:
        provider: PassivePacketSource {
            @display("p=100,100");
        }
        classifier: MarkovClassifier {
            @display("p=200,100");
        }
        collector1: ActivePacketSink {
            @display("p=300,100");
        }
        collector2: ActivePacketSink {
            @display("p=300,200");
        }
    connections allowunconnected:
        provider.out --> classifier.in;
        classifier.out++ --> collector1.in;
        classifier.out++ --> collector2.in;
}

%inifile: omnetpp.ini

[General]
network = TestBurst
sim-time-limit = 100s
cmdenv-event-banners = false
cmdenv-log-prefix = "At %ts %N: "
*.provider.packetLength = 1B
*.collector1.collectionInterval = uniform(0s, 20s)
*.collector2.collectionInterval = uniform(0s, 2s)
*.classifier.transitionProbabilities = "0 1 1 0"
*.classifier.waitIntervals = "40 4"

%# remove formatting
%subst: /\x1B\[[0-9;]*m//

%subst: /\nRunning simulation\.\.\.\n//

%contains-regex: stdout
At [^\n]*?: Providing packet, [^\n]*?provider-0[^\n]*?
At [^\n]*?: Collecting packet, [^\n]*?provider-0[^\n]*?
At [^\n]*?: Providing packet, [^\n]*?provider-1[^\n]*?
At [^\n]*?: Collecting packet, [^\n]*?provider-1[^\n]*?
At [^\n]*?: Providing packet, [^\n]*?provider-2[^\n]*?
At [^\n]*?: Collecting packet, [^\n]*?provider-2[^\n]*?
At [^\n]*?: Providing packet, [^\n]*?provider-3[^\n]*?
At [^\n]*?: Collecting packet, [^\n]*?provider-3[^\n]*?
At [^\n]*?: Providing packet, [^\n]*?provider-4[^\n]*?
At [^\n]*?: Collecting packet, [^\n]*?provider-4[^\n]*?
At [^\n]*?: Providing packet, [^\n]*?provider-5[^\n]*?
At [^\n]*?: Collecting packet, [^\n]*?provider-5[^\n]*?
At [^\n]*?: Providing packet, [^\n]*?provider-6[^\n]*?
At [^\n]*?: Collecting packet, [^\n]*?provider-6[^\n]*?
At [^\n]*?: Providing packet, [^\n]*?provider-7[^\n]*?
At [^\n]*?: Collecting packet, [^\n]*?provider-7[^\n]*?
At [^\n]*?: Providing packet, [^\n]*?provider-8[^\n]*?
At [^\n]*?: Collecting packet, [^\n]*?provider-8[^\n]*?
At [^\n]*?: Providing packet, [^\n]*?provider-9[^\n]*?
At [^\n]*?: Collecting packet, [^\n]*?provider-9[^\n]*?
At [^\n]*?: Providing packet, [^\n]*?provider-10[^\n]*?
At [^\n]*?: Collecting packet, [^\n]*?provider-10[^\n]*?
At [^\n]*?: Providing packet, [^\n]*?provider-11[^\n]*?
At [^\n]*?: Collecting packet, [^\n]*?provider-11[^\n]*?
At [^\n]*?: Providing packet, [^\n]*?provider-12[^\n]*?
At [^\n]*?: Collecting packet, [^\n]*?provider-12[^\n]*?
At [^\n]*?: Providing packet, [^\n]*?provider-13[^\n]*?
At [^\n]*?: Collecting packet, [^\n]*?provider-13[^\n]*?
At [^\n]*?: Providing packet, [^\n]*?provider-14[^\n]*?
At [^\n]*?: Collecting packet, [^\n]*?provider-14[^\n]*?
At [^\n]*?: Providing packet, [^\n]*?provider-15[^\n]*?
At [^\n]*?: Collecting packet, [^\n]*?provider-15[^\n]*?
