%description:

TODO

%file: test.ned

import inet.queueing.classifier.MultiTokenBucketClassifier;
import inet.queueing.sink.PassivePacketSink;
import inet.queueing.source.ActivePacketSource;

network TestTokenBucket
{
    submodules:
        producer: ActivePacketSource {
            @display("p=100,100");
        }
        classifier: MultiTokenBucketClassifier {
            @display("p=200,100");
        }
        greenConsumer: PassivePacketSink {
            @display("p=300,100");
        }
        yellowConsumer: PassivePacketSink {
            @display("p=300,200");
        }
        redConsumer: PassivePacketSink {
            @display("p=300,300");
        }
    connections allowunconnected:
        producer.out --> classifier.in;
        classifier.out++ --> greenConsumer.in;
        classifier.out++ --> yellowConsumer.in;
        classifier.out++ --> redConsumer.in;
}

%inifile: omnetpp.ini

[General]
network = TestTokenBucket
sim-time-limit = 10s
cmdenv-log-prefix = "At %ts %N: "
cmdenv-event-banners = false
*.producer.packetLength = 1B
*.producer.productionInterval = exponential(1s)
*.classifier.buckets = [{tokenProductionRate: 4, label: "green"}, {tokenProductionRate: 2, label: "yellow"}]

%# remove formatting
%subst: /\x1B\[[0-9;]*m//

%subst: /\nRunning simulation\.\.\.\n//

%contains-regex: stdout
At [^\n]*? producer: Producing packet, [^\n]*?producer-0[^\n]*?
At [^\n]*? classifier: Classifying packet, [^\n]*?producer-0[^\n]*?
At [^\n]*? classifier: Checking tokens for packet, [^\n]*?8[^\n]*?0[^\n]*?producer-0[^\n]*?
At [^\n]*? classifier: Checking tokens for packet, [^\n]*?8[^\n]*?0[^\n]*?producer-0[^\n]*?
At [^\n]*? classifier: Insufficient number of tokens for packet, [^\n]*?8[^\n]*?producer-0[^\n]*?
At [^\n]*? redConsumer: Consuming packet, [^\n]*?producer-0[^\n]*?
At [^\n]*? producer: Producing packet, [^\n]*?producer-1[^\n]*?
At [^\n]*? classifier: Classifying packet, [^\n]*?producer-1[^\n]*?
At [^\n]*? classifier: Checking tokens for packet, [^\n]*?8[^\n]*?3.1835[^\n]*?producer-1[^\n]*?
At [^\n]*? classifier: Checking tokens for packet, [^\n]*?8[^\n]*?1.59175[^\n]*?producer-1[^\n]*?
At [^\n]*? classifier: Insufficient number of tokens for packet, [^\n]*?8[^\n]*?producer-1[^\n]*?
At [^\n]*? redConsumer: Consuming packet, [^\n]*?producer-1[^\n]*?
At [^\n]*? producer: Producing packet, [^\n]*?producer-2[^\n]*?
At [^\n]*? classifier: Classifying packet, [^\n]*?producer-2[^\n]*?
At [^\n]*? classifier: Checking tokens for packet, [^\n]*?8[^\n]*?6.77774[^\n]*?producer-2[^\n]*?
At [^\n]*? classifier: Checking tokens for packet, [^\n]*?8[^\n]*?3.38887[^\n]*?producer-2[^\n]*?
At [^\n]*? classifier: Insufficient number of tokens for packet, [^\n]*?8[^\n]*?producer-2[^\n]*?
At [^\n]*? redConsumer: Consuming packet, [^\n]*?producer-2[^\n]*?
At [^\n]*? producer: Producing packet, [^\n]*?producer-3[^\n]*?
At [^\n]*? classifier: Classifying packet, [^\n]*?producer-3[^\n]*?
At [^\n]*? classifier: Checking tokens for packet, [^\n]*?8[^\n]*?11.8015[^\n]*?producer-3[^\n]*?
At [^\n]*? classifier: Removed tokens from ith bucket for packet, [^\n]*?8[^\n]*?0[^\n]*?3.80146[^\n]*?producer-3[^\n]*?
At [^\n]*? greenConsumer: Consuming packet, [^\n]*?producer-3[^\n]*?
At [^\n]*? producer: Producing packet, [^\n]*?producer-4[^\n]*?
At [^\n]*? classifier: Classifying packet, [^\n]*?producer-4[^\n]*?
At [^\n]*? classifier: Checking tokens for packet, [^\n]*?8[^\n]*?11.2399[^\n]*?producer-4[^\n]*?
At [^\n]*? classifier: Removed tokens from ith bucket for packet, [^\n]*?8[^\n]*?0[^\n]*?3.23988[^\n]*?producer-4[^\n]*?
At [^\n]*? greenConsumer: Consuming packet, [^\n]*?producer-4[^\n]*?
At [^\n]*? producer: Producing packet, [^\n]*?producer-5[^\n]*?
At [^\n]*? classifier: Classifying packet, [^\n]*?producer-5[^\n]*?
At [^\n]*? classifier: Checking tokens for packet, [^\n]*?8[^\n]*?6.93277[^\n]*?producer-5[^\n]*?
At [^\n]*? classifier: Checking tokens for packet, [^\n]*?8[^\n]*?11.4664[^\n]*?producer-5[^\n]*?
At [^\n]*? classifier: Removed tokens from ith bucket for packet, [^\n]*?8[^\n]*?1[^\n]*?3.46639[^\n]*?producer-5[^\n]*?
At [^\n]*? yellowConsumer: Consuming packet, [^\n]*?producer-5[^\n]*?
At [^\n]*? producer: Producing packet, [^\n]*?producer-6[^\n]*?
At [^\n]*? classifier: Classifying packet, [^\n]*?producer-6[^\n]*?
At [^\n]*? classifier: Checking tokens for packet, [^\n]*?8[^\n]*?14.739[^\n]*?producer-6[^\n]*?
At [^\n]*? classifier: Removed tokens from ith bucket for packet, [^\n]*?8[^\n]*?0[^\n]*?6.73895[^\n]*?producer-6[^\n]*?
At [^\n]*? greenConsumer: Consuming packet, [^\n]*?producer-6[^\n]*?
At [^\n]*? producer: Producing packet, [^\n]*?producer-7[^\n]*?
At [^\n]*? classifier: Classifying packet, [^\n]*?producer-7[^\n]*?
At [^\n]*? classifier: Checking tokens for packet, [^\n]*?8[^\n]*?9.88776[^\n]*?producer-7[^\n]*?
At [^\n]*? classifier: Removed tokens from ith bucket for packet, [^\n]*?8[^\n]*?0[^\n]*?1.88776[^\n]*?producer-7[^\n]*?
At [^\n]*? greenConsumer: Consuming packet, [^\n]*?producer-7[^\n]*?
