%description:

In this test, packets are collected periodically by an active packet sink
(ActivePacketSink). The packets are provided by a passive packet source
(PassivePacketSource). Packets are passed through from the source to the sink by
a filter (PacketFilter). Every second packet is dropped.

%file: test.ned

import inet.queueing.sink.ActivePacketSink;
import inet.queueing.filter.PacketFilter;
import inet.queueing.source.PassivePacketSource;

network TestFilter
{
    submodules:
        provider: PassivePacketSource {
            @display("p=100,100");
        }
        filter: PacketFilter {
            @display("p=200,100");
        }
        collector: ActivePacketSink {
            @display("p=300,100");
        }
    connections allowunconnected:
        provider.out --> filter.in;
        filter.out --> collector.in;
}

%file: Test.cc
#include "inet/queueing/function/PacketFilterFunction.h"
#include "inet/common/packet/Packet.h"

using namespace inet; 

static bool testFilter(const Packet *packet)
{
    return packet->getId() % 2 == 0;
}

Register_Packet_Filter_Function(@TESTNAME@TestFilter, testFilter);

%inifile: omnetpp.ini

[General]
network = TestFilter
sim-time-limit = 10s
cmdenv-event-banners = false
cmdenv-log-prefix = "At %ts %N: "
*.provider.packetLength = 1B
*.collector.collectionInterval = 1s
*.filter.filterClass = "@TESTNAME@TestFilter"

%# remove formatting
%subst: /\x1B\[[0-9;]*m//

%subst: /\nRunning simulation\.\.\.\n//

%contains-regex: stdout
At 0s provider: Providing packet, [^\n]*?provider-0[^\n]*?
At 0s filter: Passing through packet, [^\n]*?provider-0[^\n]*?
At 0s collector: Collecting packet, [^\n]*?provider-0[^\n]*?
At 1s provider: Providing packet, [^\n]*?provider-1[^\n]*?
At 1s filter: Filtering out packet, [^\n]*?provider-1[^\n]*?
At 1s provider: Providing packet, [^\n]*?provider-2[^\n]*?
At 1s filter: Passing through packet, [^\n]*?provider-2[^\n]*?
At 1s collector: Collecting packet, [^\n]*?provider-2[^\n]*?
At 2s provider: Providing packet, [^\n]*?provider-3[^\n]*?
At 2s filter: Filtering out packet, [^\n]*?provider-3[^\n]*?
At 2s provider: Providing packet, [^\n]*?provider-4[^\n]*?
At 2s filter: Passing through packet, [^\n]*?provider-4[^\n]*?
At 2s collector: Collecting packet, [^\n]*?provider-4[^\n]*?
At 3s provider: Providing packet, [^\n]*?provider-5[^\n]*?
At 3s filter: Filtering out packet, [^\n]*?provider-5[^\n]*?
At 3s provider: Providing packet, [^\n]*?provider-6[^\n]*?
At 3s filter: Passing through packet, [^\n]*?provider-6[^\n]*?
At 3s collector: Collecting packet, [^\n]*?provider-6[^\n]*?
At 4s provider: Providing packet, [^\n]*?provider-7[^\n]*?
At 4s filter: Filtering out packet, [^\n]*?provider-7[^\n]*?
At 4s provider: Providing packet, [^\n]*?provider-8[^\n]*?
At 4s filter: Passing through packet, [^\n]*?provider-8[^\n]*?
At 4s collector: Collecting packet, [^\n]*?provider-8[^\n]*?
At 5s provider: Providing packet, [^\n]*?provider-9[^\n]*?
At 5s filter: Filtering out packet, [^\n]*?provider-9[^\n]*?
At 5s provider: Providing packet, [^\n]*?provider-10[^\n]*?
At 5s filter: Passing through packet, [^\n]*?provider-10[^\n]*?
At 5s collector: Collecting packet, [^\n]*?provider-10[^\n]*?
At 6s provider: Providing packet, [^\n]*?provider-11[^\n]*?
At 6s filter: Filtering out packet, [^\n]*?provider-11[^\n]*?
At 6s provider: Providing packet, [^\n]*?provider-12[^\n]*?
At 6s filter: Passing through packet, [^\n]*?provider-12[^\n]*?
At 6s collector: Collecting packet, [^\n]*?provider-12[^\n]*?
At 7s provider: Providing packet, [^\n]*?provider-13[^\n]*?
At 7s filter: Filtering out packet, [^\n]*?provider-13[^\n]*?
At 7s provider: Providing packet, [^\n]*?provider-14[^\n]*?
At 7s filter: Passing through packet, [^\n]*?provider-14[^\n]*?
At 7s collector: Collecting packet, [^\n]*?provider-14[^\n]*?
At 8s provider: Providing packet, [^\n]*?provider-15[^\n]*?
At 8s filter: Filtering out packet, [^\n]*?provider-15[^\n]*?
At 8s provider: Providing packet, [^\n]*?provider-16[^\n]*?
At 8s filter: Passing through packet, [^\n]*?provider-16[^\n]*?
At 8s collector: Collecting packet, [^\n]*?provider-16[^\n]*?
At 9s provider: Providing packet, [^\n]*?provider-17[^\n]*?
At 9s filter: Filtering out packet, [^\n]*?provider-17[^\n]*?
At 9s provider: Providing packet, [^\n]*?provider-18[^\n]*?
At 9s filter: Passing through packet, [^\n]*?provider-18[^\n]*?
At 9s collector: Collecting packet, [^\n]*?provider-18[^\n]*?
At 10s provider: Providing packet, [^\n]*?provider-19[^\n]*?
At 10s filter: Filtering out packet, [^\n]*?provider-19[^\n]*?
At 10s provider: Providing packet, [^\n]*?provider-20[^\n]*?
At 10s filter: Passing through packet, [^\n]*?provider-20[^\n]*?
At 10s collector: Collecting packet, [^\n]*?provider-20[^\n]*?

<!> Simulation time limit reached -- at t=10s
