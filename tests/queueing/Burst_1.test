%description:

In this test, packets are periodically (randomly) produced by two active sources
(ActivePacketSources). One source produces packets with a slower rate while the other
source uses a faster rate. The two packet sources are combined using a markov
chain with random transition matrix and random wait intervals. The packets are
consumed by a single passive sink (PassivePacketSink).

%file: test.ned

import inet.queueing.sink.PassivePacketSink;
import inet.queueing.scheduler.MarkovScheduler;
import inet.queueing.source.ActivePacketSource;

network TestBurst
{
    submodules:
        producer1: ActivePacketSource {
            @display("p=100,100");
        }
        producer2: ActivePacketSource {
            @display("p=100,200");
        }
        scheduler: MarkovScheduler {
            @display("p=200,100");
        }
        consumer: PassivePacketSink {
            @display("p=300,100");
        }
    connections allowunconnected:
        producer1.out --> scheduler.in++;
        producer2.out --> scheduler.in++;
        scheduler.out --> consumer.in;
}

%inifile: omnetpp.ini

[General]
network = TestBurst
sim-time-limit = 100s
cmdenv-event-banners = false
cmdenv-log-prefix = "At %ts %N: "
*.producer*.packetLength = 1B
*.producer1.productionInterval = uniform(0s, 20s)
*.producer2.productionInterval = uniform(0s, 2s)
*.scheduler.transitionProbabilities = "0 1 1 0"
*.scheduler.waitIntervals = "40 4"

%# remove formatting
%subst: /\x1B\[[0-9;]*m//

%subst: /\nRunning simulation\.\.\.\n//

%contains-regex: stdout
At [^\n]*?: Producing packet, [^\n]*?producer1-0[^\n]*?
At [^\n]*?: Consuming packet, [^\n]*?producer1-0[^\n]*?
At [^\n]*?: Producing packet, [^\n]*?producer1-1[^\n]*?
At [^\n]*?: Consuming packet, [^\n]*?producer1-1[^\n]*?
At [^\n]*?: Producing packet, [^\n]*?producer1-2[^\n]*?
At [^\n]*?: Consuming packet, [^\n]*?producer1-2[^\n]*?
At [^\n]*?: Producing packet, [^\n]*?producer1-3[^\n]*?
At [^\n]*?: Consuming packet, [^\n]*?producer1-3[^\n]*?
At [^\n]*?: Producing packet, [^\n]*?producer2-0[^\n]*?
At [^\n]*?: Consuming packet, [^\n]*?producer2-0[^\n]*?
At [^\n]*?: Producing packet, [^\n]*?producer2-1[^\n]*?
At [^\n]*?: Consuming packet, [^\n]*?producer2-1[^\n]*?
At [^\n]*?: Producing packet, [^\n]*?producer2-2[^\n]*?
At [^\n]*?: Consuming packet, [^\n]*?producer2-2[^\n]*?
At [^\n]*?: Producing packet, [^\n]*?producer1-4[^\n]*?
At [^\n]*?: Consuming packet, [^\n]*?producer1-4[^\n]*?
At [^\n]*?: Producing packet, [^\n]*?producer1-5[^\n]*?
At [^\n]*?: Consuming packet, [^\n]*?producer1-5[^\n]*?
At [^\n]*?: Producing packet, [^\n]*?producer1-6[^\n]*?
At [^\n]*?: Consuming packet, [^\n]*?producer1-6[^\n]*?
At [^\n]*?: Producing packet, [^\n]*?producer2-3[^\n]*?
At [^\n]*?: Consuming packet, [^\n]*?producer2-3[^\n]*?
At [^\n]*?: Producing packet, [^\n]*?producer2-4[^\n]*?
At [^\n]*?: Consuming packet, [^\n]*?producer2-4[^\n]*?
At [^\n]*?: Producing packet, [^\n]*?producer2-5[^\n]*?
At [^\n]*?: Consuming packet, [^\n]*?producer2-5[^\n]*?
At [^\n]*?: Producing packet, [^\n]*?producer2-6[^\n]*?
At [^\n]*?: Consuming packet, [^\n]*?producer2-6[^\n]*?
At [^\n]*?: Producing packet, [^\n]*?producer1-7[^\n]*?
At [^\n]*?: Consuming packet, [^\n]*?producer1-7[^\n]*?
At [^\n]*?: Producing packet, [^\n]*?producer1-8[^\n]*?
At [^\n]*?: Consuming packet, [^\n]*?producer1-8[^\n]*?

<!> Simulation time limit reached -- at t=100s
