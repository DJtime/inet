%description:

In this test, packets are collected periodically by an active packet sink
(ActivePacketSink). The packets pass through a periodic packet gate and the
gate is continuously open. The packets are provided by a passive packet
source (PassivePacketSource).

%file: test.ned

import inet.queueing.gate.PeriodicGate;
import inet.queueing.sink.ActivePacketSink;
import inet.queueing.source.PassivePacketSource;

network TestProviderCollector
{
    submodules:
        provider: PassivePacketSource {
            @display("p=100,100");
        }
        gate: PeriodicGate {
            @display("p=200,100");
        }
        collector: ActivePacketSink {
            @display("p=300,100");
        }
    connections:
        provider.out --> gate.in;
        gate.out --> collector.in;
}

%inifile: omnetpp.ini

[General]
network = TestProviderCollector
sim-time-limit = 10s
cmdenv-event-banners = false
cmdenv-log-prefix = "At %ts %N: "
*.provider.packetLength = 1B
*.collector.collectionInterval = 1s
*.gate.initiallyOpen = true
*.gate.durations = []

%# remove formatting
%subst: /\x1B\[[0-9;]*m//

%subst: /\nRunning simulation\.\.\.\n//

%contains-regex: stdout
At 0s provider: Providing packet, [^\n]*?provider-0[^\n]*?
At 0s gate: Passing through packet, [^\n]*?provider-0[^\n]*?
At 0s collector: Collecting packet, [^\n]*?provider-0[^\n]*?
At 1s provider: Providing packet, [^\n]*?provider-1[^\n]*?
At 1s gate: Passing through packet, [^\n]*?provider-1[^\n]*?
At 1s collector: Collecting packet, [^\n]*?provider-1[^\n]*?
At 2s provider: Providing packet, [^\n]*?provider-2[^\n]*?
At 2s gate: Passing through packet, [^\n]*?provider-2[^\n]*?
At 2s collector: Collecting packet, [^\n]*?provider-2[^\n]*?
At 3s provider: Providing packet, [^\n]*?provider-3[^\n]*?
At 3s gate: Passing through packet, [^\n]*?provider-3[^\n]*?
At 3s collector: Collecting packet, [^\n]*?provider-3[^\n]*?
At 4s provider: Providing packet, [^\n]*?provider-4[^\n]*?
At 4s gate: Passing through packet, [^\n]*?provider-4[^\n]*?
At 4s collector: Collecting packet, [^\n]*?provider-4[^\n]*?
At 5s provider: Providing packet, [^\n]*?provider-5[^\n]*?
At 5s gate: Passing through packet, [^\n]*?provider-5[^\n]*?
At 5s collector: Collecting packet, [^\n]*?provider-5[^\n]*?
At 6s provider: Providing packet, [^\n]*?provider-6[^\n]*?
At 6s gate: Passing through packet, [^\n]*?provider-6[^\n]*?
At 6s collector: Collecting packet, [^\n]*?provider-6[^\n]*?
At 7s provider: Providing packet, [^\n]*?provider-7[^\n]*?
At 7s gate: Passing through packet, [^\n]*?provider-7[^\n]*?
At 7s collector: Collecting packet, [^\n]*?provider-7[^\n]*?
At 8s provider: Providing packet, [^\n]*?provider-8[^\n]*?
At 8s gate: Passing through packet, [^\n]*?provider-8[^\n]*?
At 8s collector: Collecting packet, [^\n]*?provider-8[^\n]*?
At 9s provider: Providing packet, [^\n]*?provider-9[^\n]*?
At 9s gate: Passing through packet, [^\n]*?provider-9[^\n]*?
At 9s collector: Collecting packet, [^\n]*?provider-9[^\n]*?
At 10s provider: Providing packet, [^\n]*?provider-10[^\n]*?
At 10s gate: Passing through packet, [^\n]*?provider-10[^\n]*?
At 10s collector: Collecting packet, [^\n]*?provider-10[^\n]*?

<!> Simulation time limit reached -- at t=10s
