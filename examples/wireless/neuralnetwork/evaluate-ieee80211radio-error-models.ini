[General]
network = EvaluateIeee80211RadioErrorModels
sim-time-limit = 100s
result-dir = "results/EvaluateIeee80211RadioErrorModels/${configname}/"
output-scalar-file = "${resultdir}/repetition=${repetition}.sca"
cmdenv-output-file = "${resultdir}/repetition=${repetition}.out"
repeat = 1
num-rngs = 2
config-recording = essentials
**Neural**.cmdenv-log-level = trace
#debug-on-errors=true
#debugger-attach-on-error=true

**.param-recording = false
**.vector-recording = false
**.bin-recording = false
**.scalar-recording = false

**.errorModel.rng-0 = 1

*.numHosts = 2
**.crcMode = "computed"
**.fcsMode = "computed"

**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 1000m
**.constraintAreaMaxY = 400m
**.constraintAreaMaxZ = 0m

# wlan
*.radio.centerFrequency = 2.412GHz # TODO: should not be here
*.radio.bandwidth = 20MHz # TODO: should not be here
*.radio.transmitter.power = 20MW # so the power density is 1 WpHz
*.radio.receiver.sensitivity = -109dBm
*.radio.receiver.energyDetection = -90dBm
*.radio.receiver.snirThreshold = -inf dB
*.radio.receiver.channelSpacing = 20MHz




**.repeatCount = 10

# transmitter
*.radio.transmitter.bitrate = 24Mbps
*.radio.transmitter.power = 10mW
*.radio.transmitter.levelOfDetail = "symbol"
*.radio.transmitter.modulator.modulation = "QAM16"
*.radio.transmitter.encoder.fecEncoder.typename = "ConvolutionalCoder"
*.radio.transmitter.encoder.fecEncoder.transferFunctionMatrix = "1 3"
*.radio.transmitter.encoder.fecEncoder.constraintLengthVector = "2"
*.radio.transmitter.encoder.fecEncoder.puncturingMatrix = "1; 1"
*.radio.transmitter.encoder.fecEncoder.punctureK = 1
*.radio.transmitter.encoder.fecEncoder.punctureN = 2

# receiver
*.radio.receiver.levelOfDetail = "symbol"
*.radio.receiver.demodulator.modulation = "QAM16"
*.radio.receiver.decoder.fecDecoder.typename = "ConvolutionalCoder"
*.radio.receiver.decoder.fecDecoder.transferFunctionMatrix = "1 3"
*.radio.receiver.decoder.fecDecoder.constraintLengthVector = "2"
*.radio.receiver.decoder.fecDecoder.puncturingMatrix = "1; 1"
*.radio.receiver.decoder.fecDecoder.punctureK = 1
*.radio.receiver.decoder.fecDecoder.punctureN = 2





**.snirsFilename = "generator_snirs_100.csv"

# mobility
*.radio.antenna.mobility.typename = "StationaryMobility"
*.radio.antenna.mobility.initialX = 0m
*.radio.antenna.mobility.initialY = 0m
*.radio.antenna.mobility.initialZ = 0m
*.radio.antenna.mobilityModule = "mobility"

[Config DimensionalSymbollevel]
description = "symbol level simulation using dimensional analog model"

**.persFilename = "pers_s.csv"

**.radioMedium.typename = "Ieee80211LayeredDimensionalRadioMedium"
**.radio.typename = "Ieee80211OfdmRadio"

# transmitter
**.radio.transmitter.typename = "Ieee80211LayeredOfdmTransmitter"
**.radio.transmitter.levelOfDetail = "symbol"

# receiver
**.radio.receiver.typename = "Ieee80211LayeredOfdmReceiver"
**.radio.receiver.levelOfDetail = "symbol"
**.radio.receiver.errorModel.typename = "Ieee80211OfdmErrorModel"



[Config DimensionalPacketlevel]
description = "packet level simulation using dimensional analog model"

**.persFilename = "pers_p.csv"

*.radioMedium.typename = "Ieee80211DimensionalRadioMedium"
*.radio.typename = "Ieee80211DimensionalRadio"

**.snirMode = "mean"


[Config DimensionalPacketlevelNeuralNetwork]
description = "packet level simulation using scalar analog model with neural network based error model"
extends = DimensionalPacketlevel

**.persFilename = "pers_n.csv"

*.radio.receiver.errorModel.typename = "NeuralNetworkErrorModel"
*.radio.receiver.errorModel.modelNameFormat = "%c_%r_%m_%M_%f_%b"
*.radio.receiver.errorModel.neuralNetworkModelFilenames = "models/Ieee80211Radio_24Mbps_Ieee80211Ofdm_Qam16_2.412GHz_20MHz.model"

