[General]
sim-time-limit = 1s
description = "abstract"

# enable time synchronization in all network nodes
*.*.hasTimeSynchronization = true

# all oscillators have a random constant drift
**.tsnClock1.clock.oscillator.typename = "ConstantDriftOscillator"
**.tsnClock2.clock.oscillator.typename = "RandomDriftOscillator"
**.oscillator.changeInterval = 10ms
**.tsnClock1.clock.oscillator.driftRate = 0ppm
**.oscillator.initialDriftRate = uniform(-1000000ppm, 1000000ppm)
**.oscillator.driftRateChange = uniform(-1000ppm, 1000ppm)
**.oscillator.driftRateChangeUpperLimit = 1000000ppm
**.oscillator.driftRateChangeLowerLimit = -1000000ppm

**.channel.delay = 0s

# all Ethernet interfaces have 100 Mbps speed
*.*.eth[*].bitrate = 100Mbps

*.visualizer.typename = "IntegratedMultiCanvasVisualizer"
*.visualizer.infoVisualizer[*].displayInfos = true

[Config PrimaryAndHotStandbyMasterClocks]
network = TwoMasterClocksTreeGptpShowcase
description = "Extended tree topology with two master clocks"

# TSN clock2 has a settable clock
*.tsnClock2.clock.typename = "SettableClock"

*.tsnClock1.gptp.typename = "Gptp"
*.tsnClock1.gptp.clockModule = "tsnClock1.clock"
*.tsnClock1.gptp.masterPorts = ["eth0"]

*.tsnClock2.gptp.typename = "MultiDomainGptp"
*.tsnClock2.gptp.numDomains = 1
*.tsnClock2.gptp.domain[*].clockModule = "tsnClock2.clock"
*.tsnClock2.gptp.domain[0].gptpNodeType = "SLAVE_NODE"
*.tsnClock2.gptp.domain[0].slavePort = "eth0"
*.tsnClock2.gptp.domain[1].gptpNodeType = "MASTER_NODE"
*.tsnClock2.gptp.domain[1].masterPorts = ["eth0"]

# TSN switches have multiple clocks
*.tsnSwitch*.clock.typename = "MultiClock"
*.tsnSwitch*.clock.numClocks = 2

# TSN switches have multiple gPTP time synchronization domains
*.tsnSwitch*.gptp.typename = "MultiDomainGptp"
*.tsnSwitch*.gptp.numDomains = 2
*.tsnSwitch1.gptp.domain[0].slavePort = "eth0"
*.tsnSwitch1.gptp.domain[0].masterPorts = ["eth1", "eth2", "eth3"]
*.tsnSwitch1.gptp.domain[1].slavePort = "eth1"
*.tsnSwitch1.gptp.domain[1].masterPorts = ["eth2", "eth3"]	# eth1 is omitted because no sync needed towards primary master
*.tsnSwitch2.gptp.domain[0].slavePort = "eth1"
*.tsnSwitch2.gptp.domain[0].masterPorts = ["eth0", "eth2", "eth3"]
*.tsnSwitch2.gptp.domain[1].slavePort = "eth0"
*.tsnSwitch2.gptp.domain[1].masterPorts = ["eth1", "eth2", "eth3"]

# TSN devices have multiple clocks
*.tsnDevice*.clock.typename = "MultiClock"
*.tsnDevice*.clock.numClocks = 2

# TSN devices have multiple gPTP time synchronization domains
*.tsnDevice*.gptp.typename = "MultiDomainGptp"
*.tsnDevice*.gptp.numDomains = 2
*.tsnDevice1.gptp.clockModule = "tsnDevice1.clock"
*.tsnDevice2.gptp.clockModule = "tsnDevice2.clock"
*.tsnDevice3.gptp.clockModule = "tsnDevice3.clock"
*.tsnDevice4.gptp.clockModule = "tsnDevice4.clock"
*.tsnDevice*.gptp.domain[*].slavePort = "eth0"

# different initial gPTP pdelay measurement and time synchronization offsets
**.pdelayInitialOffset = 100s
*.*.gptp.domain[0].syncInitialOffset = syncInterval * 1 / 2
*.*.gptp.domain[1].syncInitialOffset = syncInterval * 2 / 2

# set reference clocks so the time difference can be visualized
**.clock[0].referenceClock = "tsnClock1.clock"
**.clock[1].referenceClock = "tsnClock2.clock"

# multiple data link visualizers display different gPTP time synchronization domain packets
*.visualizer.numDataLinkVisualizers = 2
*.visualizer.dataLinkVisualizer[*].displayLinks = true
*.visualizer.dataLinkVisualizer[*].activityLevel = "protocol"
*.visualizer.dataLinkVisualizer[0].packetFilter = expr((has(GptpSync) && GptpSync.domainNumber == 0) || (has(GptpFollowUp) && GptpFollowUp.domainNumber == 0))
*.visualizer.dataLinkVisualizer[1].packetFilter = expr((has(GptpSync) && GptpSync.domainNumber == 1) || (has(GptpFollowUp) && GptpFollowUp.domainNumber == 1))
*.visualizer.dataLinkVisualizer[0].tags = "primary GM"
*.visualizer.dataLinkVisualizer[1].tags = "hot-standby GM"
*.visualizer.dataLinkVisualizer[0].lineColor = "blue2"
*.visualizer.dataLinkVisualizer[1].lineColor = "red2"

*.visualizer.numInfoVisualizers = 8
*.visualizer.infoVisualizer[0].modules = "*.tsnDevice*.*.clock[0]"
*.visualizer.infoVisualizer[0].textColor = "blue"
*.visualizer.infoVisualizer[1].modules = "*.tsnDevice*.*.clock[1]"
*.visualizer.infoVisualizer[1].textColor = "red"
*.visualizer.infoVisualizer[0..1].placementHint = "bottom"
*.visualizer.infoVisualizer[2].modules = "*.tsnClock1.clock"
*.visualizer.infoVisualizer[3].modules = "*.tsnClock2.clock"
*.visualizer.infoVisualizer[2].textColor = "blue"
*.visualizer.infoVisualizer[3].textColor = "red"
*.tsnClock*.clock.displayStringTextFormat = "time: %T"
*.visualizer.infoVisualizer[4].modules = "*.tsnSwitch1.*.clock[0]"
*.visualizer.infoVisualizer[5].modules = "*.tsnSwitch1.*.clock[1]"
*.visualizer.infoVisualizer[6].modules = "*.tsnSwitch2.*.clock[0]"
*.visualizer.infoVisualizer[7].modules = "*.tsnSwitch2.*.clock[1]"
*.visualizer.infoVisualizer[{4,6}].textColor = "blue"
*.visualizer.infoVisualizer[{5,7}].textColor = "red"
*.tsnDevice*.clock.*.displayStringTextFormat = "diff: %d"
*.tsnSwitch*.clock.*.displayStringTextFormat = "diff: %d"
*.visualizer.infoVisualizer[4..5].placementHint = "topLeft"
*.visualizer.infoVisualizer[6..7].placementHint = "topRight"
